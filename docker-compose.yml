version: "3"

networks:
  grafana-networks:
    driver: bridge

services:
  nginx:
    image: nginx
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
    networks:
      - grafana-networks

  loki:
    container_name: loki
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    # command: -config.file=/etc/loki/local-config.yml
    networks:
      - grafana-networks

  # promtail:
  #   container_name: promtail
  #   image: grafana/promtail:2.9.0
  #   volumes:
  #     - /var/log:/var/log
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./promtail-config.yml:/etc/promtail/docker-config.yml
  #   command: -config.file=/etc/promtail/docker-config.yml
  #   networks:
  #     - grafana-networks

  grafana:
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        - name: Jaeger
          type: jaeger
          access: proxy
          orgId: 1
          url: http://jaeger:16686
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - grafana-networks

  jaeger:
    image: jaegertracing/all-in-one:1.6
    container_name: jaeger
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - grafana-networks

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    # command:
    #   - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - grafana-networks

  # promotheus node exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - grafana-networks

